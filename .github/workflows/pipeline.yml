name: pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '0 */6 * * *'

env:
  CC: gcc-10
  CXX: g++-10

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt-get install -y libssl-dev pkg-config gcc-10 g++-10 curl mandoc valgrind clang-tools meson ninja-build liblmdb-dev
    - name: Install latest uSockets
      run: |
        git clone https://github.com/uNetworking/uSockets
        cd uSockets
        git fetch --all --tags
        git checkout c2c1bbfa1644f1f6eb7fc9375650f41c5f9b7b06  # $(git describe --tags $(git rev-list --tags --max-count=1))
        curl https://raw.githubusercontent.com/gentoo/guru/dev/net-libs/usockets/files/usockets-0.8.1_p20211023-Makefile.patch | git apply
        curl https://raw.githubusercontent.com/gentoo/guru/dev/net-libs/usockets/files/usockets-0.8.1_p20211023-pkg-config.patch | git apply
        make WITH_OPENSSL=1
        sudo make install
    - name: Install latest uWebSockets
      run: |
        git clone https://github.com/uNetworking/uWebSockets
        git fetch --all --tags
        git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
        sudo cp -r uWebSockets/src /usr/include/uWebSockets
    - name: Install lmdb
      run: |
        wget https://git.openldap.org/openldap/openldap/-/archive/LMDB_0.9.29/openldap-LMDB_0.9.29.tar.gz
        tar xzf openldap-LMDB_0.9.29.tar.gz
        cd openldap-LMDB_0.9.29/libraries/liblmdb
        make CC=${CC}
        sudo make prefix="/usr" install
    - name: Install lmdbxx
      run: |
        sudo wget https://raw.githubusercontent.com/hoytech/lmdbxx/1.0.0/lmdb%2B%2B.h -O /usr/include/lmdb++.h
    - name: Make
      run: |
        meson setup -Denable_testing=true -Dtest_dd_flags="iflag=fullblock" -Dtest_valgrind_wrapper="valgrind --leak-check=full --show-leak-kinds=all --verbose" build
        ninja -C build scan-build
    - name: Test
      run: |
        ninja -C build test
    - name: Check man pages
      run: |
        mandoc -T lint -W warning man/purrito.1
